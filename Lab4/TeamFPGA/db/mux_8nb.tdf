--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_SIZE=4 LPM_WIDTH=7 LPM_WIDTHS=2 data result sel
--VERSION_BEGIN 17.0 cbx_lpm_mux 2017:04:25:18:06:30:SJ cbx_mgl 2017:04:25:18:09:28:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 14 
SUBDESIGN mux_8nb
( 
	data[27..0]	:	input;
	result[6..0]	:	output;
	sel[1..0]	:	input;
) 
VARIABLE 
	result_node[6..0]	: WIRE;
	sel_node[1..0]	: WIRE;
	w_data270w[3..0]	: WIRE;
	w_data300w[3..0]	: WIRE;
	w_data325w[3..0]	: WIRE;
	w_data350w[3..0]	: WIRE;
	w_data375w[3..0]	: WIRE;
	w_data400w[3..0]	: WIRE;
	w_data425w[3..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( (((w_data425w[1..1] & sel_node[0..0]) & (! (((w_data425w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data425w[2..2]))))) # ((((w_data425w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data425w[2..2]))) & (w_data425w[3..3] # (! sel_node[0..0])))), (((w_data400w[1..1] & sel_node[0..0]) & (! (((w_data400w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data400w[2..2]))))) # ((((w_data400w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data400w[2..2]))) & (w_data400w[3..3] # (! sel_node[0..0])))), (((w_data375w[1..1] & sel_node[0..0]) & (! (((w_data375w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data375w[2..2]))))) # ((((w_data375w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data375w[2..2]))) & (w_data375w[3..3] # (! sel_node[0..0])))), (((w_data350w[1..1] & sel_node[0..0]) & (! (((w_data350w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data350w[2..2]))))) # ((((w_data350w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data350w[2..2]))) & (w_data350w[3..3] # (! sel_node[0..0])))), (((w_data325w[1..1] & sel_node[0..0]) & (! (((w_data325w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data325w[2..2]))))) # ((((w_data325w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data325w[2..2]))) & (w_data325w[3..3] # (! sel_node[0..0])))), (((w_data300w[1..1] & sel_node[0..0]) & (! (((w_data300w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data300w[2..2]))))) # ((((w_data300w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data300w[2..2]))) & (w_data300w[3..3] # (! sel_node[0..0])))), (((w_data270w[1..1] & sel_node[0..0]) & (! (((w_data270w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data270w[2..2]))))) # ((((w_data270w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data270w[2..2]))) & (w_data270w[3..3] # (! sel_node[0..0])))));
	sel_node[] = ( sel[1..0]);
	w_data270w[] = ( data[21..21], data[14..14], data[7..7], data[0..0]);
	w_data300w[] = ( data[22..22], data[15..15], data[8..8], data[1..1]);
	w_data325w[] = ( data[23..23], data[16..16], data[9..9], data[2..2]);
	w_data350w[] = ( data[24..24], data[17..17], data[10..10], data[3..3]);
	w_data375w[] = ( data[25..25], data[18..18], data[11..11], data[4..4]);
	w_data400w[] = ( data[26..26], data[19..19], data[12..12], data[5..5]);
	w_data425w[] = ( data[27..27], data[20..20], data[13..13], data[6..6]);
END;
--VALID FILE
